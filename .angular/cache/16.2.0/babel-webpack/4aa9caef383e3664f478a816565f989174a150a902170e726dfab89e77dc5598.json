{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SidebarStateService {\n  constructor() {\n    this._isOpen = new BehaviorSubject(false);\n    this.isOpen$ = this._isOpen.asObservable();\n  }\n  toggle() {\n    this._isOpen.next(!this._isOpen.value);\n  }\n}\n_class = SidebarStateService;\n_class.ɵfac = function SidebarStateService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","SidebarStateService","constructor","_isOpen","isOpen$","asObservable","toggle","next","value","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ASUS\\OneDrive\\Bureau\\MOOC\\mysite\\mysite\\src\\app\\services\\sidebar-state.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SidebarStateService {\n  private _isOpen = new BehaviorSubject<boolean>(false);\n  isOpen$ = this._isOpen.asObservable();\n\n  toggle() {\n    this._isOpen.next(!this._isOpen.value);\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,mBAAmB;EAHhCC,YAAA;IAIU,KAAAC,OAAO,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;IACrD,KAAAI,OAAO,GAAG,IAAI,CAACD,OAAO,CAACE,YAAY,EAAE;;EAErCC,MAAMA,CAAA;IACJ,IAAI,CAACH,OAAO,CAACI,IAAI,CAAC,CAAC,IAAI,CAACJ,OAAO,CAACK,KAAK,CAAC;EACxC;;SANWP,mBAAmB;;mBAAnBA,MAAmB;AAAA;;SAAnBA,MAAmB;EAAAQ,OAAA,EAAnBR,MAAmB,CAAAS,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}